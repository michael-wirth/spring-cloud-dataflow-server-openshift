apiVersion: v1
kind: Template
metadata:
  name: "spring-cloud-dataflow-server"
  annotations:
    openshift.io/display-name: "Spring Cloud Data Flow Server for OpenShift with persistent datasources and Kafka Template"
    description: |-
      A Spring Cloud Data Flow Server for OpenShift template.
      This template deploys the Data Flow Server, an persistent Postgresql container, an ephemeral Redis container and a Kafka environment.
      These resources sare configured by means of the ConfigMap.
    iconClass: "icon-spring"
    tags: "integration,spring-cloud"
message: |-
  Spring Cloud Data Flow Server for OpenShift, Postgresql, Redis and Kafka are being deployed...
  
  Postgresql
  ----------

        Username: ${DEPLOYER_DATASOURCE_USERNAME}
        Password: ${DEPLOYER_DATASOURCE_PASSWORD}
   Database Name: ${DEPLOYER_DATASOURCE_NAME}
  Connection URL: postgresql://scdf-postgresql:5432/${DEPLOYER_DATASOURCE_NAME}
labels:
  template: scdf-kafka
objects:
  -
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: scdf-kafka-config
    data:
      application.yaml: "health.config.enabled: ${ENABLE_CONFIG_SERVER}\nmanagement.security.enabled: false\nsecurity.basic.enabled: true\nsecurity.basic.realm: Spring Cloud Data Flow\n\nspring:\n  cloud:\n    deployer:\n      openshift:\n        environmentVariables: 'SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=${KAFKA_BROKER_SERVICE_HOST}:${KAFKA_BROKER_SERVICE_PORT},SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES=${KAFKA_ZK_SERVICE_HOST}:${KAFKA_ZK_SERVICE_PORT},SPRING_REDIS_HOST=${REDIS_SERVICE_HOST},SPRING_REDIS_PORT=${REDIS_SERVICE_PORT}'\n\n    dataflow.security.authentication.file.enabled: true\n    dataflow.security.authentication.file.users.admin: 'admin, ROLE_MANAGE, ROLE_VIEW'\n    dataflow.security.authentication.file.users.user: 'password, ROLE_VIEW, ROLE_CREATE'\n    dataflow.features.analytics.enabled: true\n    dataflow.metrics.collector.uri: 'http://scdf-metrics-collector:${SCDF_METRICS_COLLECTOR_SERVICE_PORT}'\n    dataflow.application-properties.stream.spring.cloud.stream.bindings.applicationMetrics.destination: metrics\n  datasource:\n    url: jdbc:postgresql://${MYSQL_SERVICE_HOST}:${MYSQL_SERVICE_PORT}/scdf\n    driverClassName: org.mariadb.jdbc.Driver\n    testOnBorrow: true\n    validationQuery: 'SELECT 1'\n  redis:\n    host: ${REDIS_SERVICE_HOST}\n    port: ${REDIS_SERVICE_PORT}\n\nmaven:\n  resolvePom: ${REMOTE_MAVEN_REPO_RESOLVE_POM}\n  remote-repositories.${REMOTE_MAVEN_REPO_NAME}:\n    url: ${REMOTE_MAVEN_REPO_URL}\n    auth:\n      username: ${REMOTE_MAVEN_REPO_AUTH_USERNAME}\n      password: ${REMOTE_MAVEN_REPO_AUTH_PASSWORD}"
  -
    apiVersion: v1
    kind: Secret
    metadata:
      name: scdf-secrets
    stringData:
      spring.datasource.username: '${DEPLOYER_DATASOURCE_USERNAME}'
      spring.datasource.password: '${DEPLOYER_DATASOURCE_PASSWORD}'
      spring.datasource.name: '${DEPLOYER_DATASOURCE_NAME}'
      spring.cloud.dataflow.metrics.collector.username: '${METRICS_SECURITY_USERNAME}'
      spring.cloud.dataflow.metrics.collector.password: '${METRICS_SECURITY_PASSWORD}'
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: scdf-kafka
    spec:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: scdf-kafka
      template:
        metadata:
          labels:
            name: scdf-kafka
        spec:
          containers:
            -
              name: scdf-kafka
              image: scdf/spring-cloud-dataflow-server-openshift
              env:
                -
                  name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                -
                  name: JAVA_OPTS
                  value: '${JAVA_OPTS}'
                -
                  name: SPRING_CLOUD_CONFIG_SERVER_BOOTSTRAP
                  value: '${ENABLE_CONFIG_SERVER}'
                -
                  name: SPRING_CLOUD_DATAFLOW_FEATURES_ANALYTICS_ENABLED
                  value: '${ENABLE_ANALYTICS}'
                -
                  name: SPRING_CLOUD_DEPLOYER_OPENSHIFT_REQUESTS_MEMORY
                  value: '${DEPLOYER_REQUESTS_MEMORY}'
                -
                  name: SPRING_CLOUD_DEPLOYER_OPENSHIFT_LIMITS_MEMORY
                  value: '${DEPLOYER_LIMITS_MEMORY}'
                -
                  name: SPRING_CLOUD_DEPLOYER_OPENSHIFT_REQUESTS_CPU
                  value: '${DEPLOYER_REQUESTS_CPU}'
                -
                  name: SPRING_CLOUD_DEPLOYER_OPENSHIFT_LIMITS_CPU
                  value: '${DEPLOYER_LIMITS_CPU}'
                -
                  name: SPRING_APPLICATION_JSON
                  value: '${SPRING_APPLICATION_JSON}'
                -
                  name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLE_API
                  value: 'true'
                -
                  name: SPRING_CLOUD_KUBERNETES_SECRETS_NAME
                  value: scdf-secrets
                -
                  name: SPRING_CLOUD_KUBERNETES_CONFIG_NAME
                  value: scdf-kafka-config
              ports:
                -
                  name: http
                  containerPort: '${SERVER_PORT}'
              readinessProbe:
                httpGet:
                  path: /actuator/info
                  port: ${SERVER_PORT}
                  scheme: HTTP
                initialDelaySeconds: 40
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: ${SERVER_PORT}
                  scheme: HTTP
                initialDelaySeconds: 40
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: '${DEPLOYER_SERVER_LIMITS_CPU}'
                  memory: '${DEPLOYER_SERVER_LIMITS_MEMORY}'
                requests:
                  cpu: '${DEPLOYER_SERVER_REQUESTS_CPU}'
                  memory: '${DEPLOYER_SERVER_REQUESTS_MEMORY}'
          restartPolicy: Always
          serviceAccount: scdf
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: scdf-kafka
      name: scdf-kafka
    spec:
      ports:
        -
          name: http
          port: '${SERVER_PORT}'
          targetPort: http
      selector:
        name: scdf-kafka
  -
    apiVersion: v1
    kind: Route
    metadata:
      name: scdf-kafka
    spec:
      host: '${ROUTE_HOST}'
      to:
        kind: Service
        name: scdf-kafka
      port:
        targetPort: http
  -
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: scdf-metrics-collector-config
    data:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: '${KAFKA_BROKER_SERVICE_HOST}:${KAFKA_BROKER_SERVICE_PORT}'
      SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES: '${KAFKA_ZK_SERVICE_HOST}:${KAFKA_ZK_SERVICE_PORT}'
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: scdf-metrics-collector
    spec:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: scdf-metrics-collector
      template:
        metadata:
          labels:
            name: scdf-metrics-collector
        spec:
          containers:
            -
              name: scdf-metrics-collector
              image: 'springcloud/metrics-collector-kafka:latest'
              env:
                -
                  name: JAVA_OPTS
                  value: '${METRICS_JAVA_OPTS}'
                -
                  name: SECURITY_USER_NAME
                  value: '${METRICS_SECURITY_USERNAME}'
                -
                  name: SECURITY_USER_PASSWORD
                  value: '${METRICS_SECURITY_PASSWORD}'
              envFrom:
                -
                  configMapRef:
                    name: scdf-metrics-collector-config
              ports:
                -
                  name: http
                  containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /info
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 10
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: '${METRICS_SERVER_LIMITS_CPU}'
                  memory: '${METRICS_SERVER_LIMITS_MEMORY}'
                requests:
                  cpu: '${METRICS_SERVER_REQUESTS_CPU}'
                  memory: '${METRICS_SERVER_REQUESTS_MEMORY}'
          restartPolicy: Always
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: scdf-metrics-collector
      name: scdf-metrics-collector
    spec:
      ports:
        -
          name: http
          port: 8080
          targetPort: http
      selector:
        name: scdf-metrics-collector
  -
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: 'postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}'
      name: scdf-postgresql
    spec:
      ports:
        -
          name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: scdf-postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  -
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: scdf-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${VOLUME_CAPACITY}'
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: scdf-postgresql
    spec:
      triggers:
        -
          type: ConfigChange
        -
          type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: 'postgresql:latest'
              namespace: openshift
            lastTriggeredImage: ""
      replicas: 1
      selector:
        name: scdf-postgresql
      template:
        metadata:
          labels:
            name: scdf-postgresql
        spec:
          containers:
            -
              name: postgresql
              env:
                -
                  name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: spring.datasource.username
                      name: scdf-secrets
                -
                  name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: spring.datasource.password
                      name: scdf-secrets
                -
                  name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: spring.datasource.name
                      name: scdf-secrets
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - '--live'
                initialDelaySeconds: 120
                timeoutSeconds: 10
              ports:
                -
                  containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                initialDelaySeconds: 5
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                -
                  mountPath: /var/lib/pgsql/data
                  name: scdf-postgresql
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            -
              name: scdf-postgresql
              persistentVolumeClaim:
                claimName: scdf-data
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: redis
    spec:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: redis
      template:
        metadata:
          labels:
            name: redis
        spec:
          containers:
            -
              name: redis
              image: 'redis:3-alpine:latest'
              ports:
                -
                  name: redis
                  containerPort: 6379
              readinessProbe:
                tcpSocket:
                  port: 6379
                initialDelaySeconds: 5
                timeoutSeconds: 5
              livenessProbe:
                tcpSocket:
                  port: 6379
                initialDelaySeconds: 5
                timeoutSeconds: 5
          restartPolicy: Always
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: redis
      name: redis
    spec:
      ports:
        -
          name: redis
          port: 6379
          targetPort: redis
      selector:
        name: redis
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: kafka-zk
    spec:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: kafka-zk
      template:
        metadata:
          labels:
            name: kafka-zk
        spec:
          containers:
            -
              name: kafka-zk
              image: 'confluentinc/cp-zookeeper:latest'
              ports:
                -
                  containerPort: 2181
              env:
                -
                  name: ZOOKEEPER_ID
                  value: '1'
                -
                  name: ZOOKEEPER_SERVER_1
                  value: kafka-zk
                -
                  name: ZOOKEEPER_CLIENT_PORT
                  value: '2181'
                -
                  name: ZOOKEEPER_TICK_TIME
                  value: '2000'
              readinessProbe:
                tcpSocket:
                  port: 2181
                initialDelaySeconds: 5
                timeoutSeconds: 5
              livenessProbe:
                tcpSocket:
                  port: 2181
                initialDelaySeconds: 5
                timeoutSeconds: 5
          restartPolicy: Always
          serviceAccount: scdf
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: kafka-zk
      name: kafka-zk
    spec:
      ports:
        -
          name: client
          port: 2181
          protocol: TCP
        -
          name: follower
          port: 2888
          protocol: TCP
        -
          name: leader
          port: 3888
          protocol: TCP
      selector:
        name: kafka-zk
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: kafka-broker
    spec:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: kafka-broker
      template:
        metadata:
          labels:
            name: kafka-broker
        spec:
          containers:
            -
              name: kafka-broker
              image: 'confluentinc/cp-kafka:latest'
              ports:
                -
                  containerPort: 9092
              env:
                -
                  name: ENABLE_AUTO_EXTEND
                  value: 'true'
                -
                  name: KAFKA_RESERVED_BROKER_MAX_ID
                  value: '999999999'
                -
                  name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
                  value: 'false'
                -
                  name: KAFKA_ADVERTISED_HOST_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                -
                  name: KAFKA_ZOOKEEPER_CONNECT
                  value: 'kafka-zk:2181'
                -
                  name: KAFKA_BROKER_ID
                  value: '1'
                -
                  name: KAFKA_ADVERTISED_LISTENERS
                  value: 'PLAINTEXT://localhost:9092'
                -
                  name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
                  value: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
                -
                  name: KAFKA_INTER_BROKER_LISTENER_NAME
                  value: PLAINTEXT
                -
                  name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
                  value: '1'
              readinessProbe:
                tcpSocket:
                  port: 9092
                initialDelaySeconds: 5
                timeoutSeconds: 5
              livenessProbe:
                tcpSocket:
                  port: 9092
                initialDelaySeconds: 5
                timeoutSeconds: 5
          restartPolicy: Always
          serviceAccount: scdf
  -
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        name: kafka-broker
      name: kafka-broker
    spec:
      ports:
        -
          port: 9092
          targetPort: 9092
          protocol: TCP
      selector:
        name: kafka-broker
parameters:
  -
    name: JAVA_OPTS
    displayName: 'Options to customise the Java runtime'
    description: 'Options to customise the Java runtime. E.g. -Xms512m -Xmx512m'
    value: '-Xms384m -Xmx384m'
  -
    name: ENABLE_CONFIG_SERVER
    displayName: 'Enable Spring Cloud Config Server'
    description: 'Flag (true/false) indicating whether to enable Spring Cloud Config Server support'
    value: 'false'
  -
    name: ENABLE_ANALYTICS
    displayName: 'Enable Spring Cloud Data Flow Analytics'
    description: 'Flag (true/false) indicating whether to enable the analytics feature. See http://docs.spring.io/spring-cloud-dataflow/docs/1.2.0.RELEASE/reference/html/arch-analytics.html'
    value: 'true'
    required: true
  -
    name: DEPLOYER_REQUESTS_MEMORY
    displayName: 'Default memory request for a Pod'
    description: 'The default memory request for a Pod. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 256Mi
  -
    name: DEPLOYER_REQUESTS_CPU
    displayName: 'Default CPU request for a Pod'
    description: 'The default CPU request for a Pod. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 500m
  -
    name: DEPLOYER_LIMITS_MEMORY
    displayName: 'Default memory limit for a Pod'
    description: 'The default memory limit for a Pod. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 512Mi
  -
    name: DEPLOYER_LIMITS_CPU
    displayName: 'Default CPU limit for a Pod'
    description: 'The default CPU limit for a Pod. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 1000m
  -
    name: DEPLOYER_SERVER_REQUESTS_MEMORY
    displayName: 'Default memory request for the Data Flow Server'
    description: 'The default memory request for the Data Flow Server. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 256Mi
  -
    name: DEPLOYER_SERVER_REQUESTS_CPU
    displayName: 'Default CPU request for the Data Flow Server'
    description: 'The default CPU request for the Data Flow Server. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 500m
  -
    name: DEPLOYER_SERVER_LIMITS_MEMORY
    displayName: 'Default memory limit for the Data Flow Server'
    description: 'The default memory limit for the Data Flow Server. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 1024Mi
  -
    name: DEPLOYER_SERVER_LIMITS_CPU
    displayName: 'Default CPU limit for the Data Flow Server'
    description: 'The default CPU limit for the Data Flow Server. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 2000m
  -
    name: SPRING_APPLICATION_JSON
    displayName: 'Spring Application JSON for addtional advanced configurations'
    description: 'Specified as a single line JSON document. See http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html'
  -
    name: REMOTE_MAVEN_REPO_NAME
    displayName: 'Remote Maven repository name'
    description: 'The name of a remote Maven repository. See http://docs.spring.io/spring-cloud-dataflow/docs/current/reference/html/getting-started-deploying-spring-cloud-dataflow.html#getting-started-deploying-spring-cloud-dataflow'
    value: spring
  -
    name: REMOTE_MAVEN_REPO_URL
    displayName: 'Remote Maven repository URL'
    description: 'The URL of a remote Maven repository from which maven:// resources will be resolved. See http://docs.spring.io/spring-cloud-dataflow/docs/current/reference/html/getting-started-deploying-spring-cloud-dataflow.html#getting-started-deploying-spring-cloud-dataflow'
    value: 'https://repo.spring.io/libs-snapshot'
  -
    name: REMOTE_MAVEN_REPO_AUTH_USERNAME
    displayName: 'Remote Maven repository username'
    description: 'The username to authenticate with the remote Maven repository. See http://docs.spring.io/spring-cloud-dataflow/docs/current/reference/html/getting-started-deploying-spring-cloud-dataflow.html#getting-started-deploying-spring-cloud-dataflow'
  -
    name: REMOTE_MAVEN_REPO_AUTH_PASSWORD
    displayName: 'Remote Maven repository password'
    description: 'The password to authenticate with the remote Maven repository. See http://docs.spring.io/spring-cloud-dataflow/docs/current/reference/html/getting-started-deploying-spring-cloud-dataflow.html#getting-started-deploying-spring-cloud-dataflow'
  -
    name: REMOTE_MAVEN_REPO_RESOLVE_POM
    displayName: 'In addition to the Jar artifact, resolve the POM artifact'
    description: 'The POM artifact contains project metadata that is necessary depending on the build strategy chosen'
    value: 'false'
  -
    name: SERVER_PORT
    displayName: 'The port to listen for HTTP traffic'
    description: 'The Spring Boot server.port value. See http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-change-the-http-port'
    value: '9393'
    required: true
  -
    name: DEPLOYER_DATASOURCE_USERNAME
    displayName: 'Datasource username'
    description: 'The Spring datasource username'
    value: scdf
  -
    name: DEPLOYER_DATASOURCE_PASSWORD
    displayName: 'Datasource password'
    description: 'The Spring datasource password. Note: This password is generated'
    generate: expression
    from: '[a-zA-Z0-9]{16}'
  -
    name: DEPLOYER_DATASOURCE_NAME
    displayName: 'Datasource Name'
    description: 'Name of the datasource.'
    required: true
    value: scdf
  -
    name: VOLUME_CAPACITY
    description: 'Datasource volume space available for data, e.g. 512Mi, 2Gi.'
    displayName: 'Datasource volume Capacity'
    required: true
    value: 1Gi
  -
    name: ROUTE_HOST
    displayName: 'The OpenShift Route host value'
    description: 'A explicit Route host value, otherise the default is used. See https://docs.openshift.org/latest/dev_guide/routes.html'
  -
    name: METRICS_JAVA_OPTS
    displayName: 'Options to customise the Java runtime for the metrics collector'
    description: 'Options to customise the Java runtime for the metrics collector. E.g. -Xms512m -Xmx512m'
    value: '-Xms256m -Xmx256m'
  -
    name: METRICS_SECURITY_USERNAME
    displayName: 'Metrics collector username'
    description: 'The Spring Cloud Data Flow Metrics collector username'
    value: scdf
  -
    name: METRICS_SECURITY_PASSWORD
    displayName: 'Metrics collector password'
    description: 'The Spring Cloud Data Flow Metrics collector password'
    value: scdf
  -
    name: METRICS_SERVER_REQUESTS_MEMORY
    displayName: 'Default memory request for the Metrics collector'
    description: 'The default memory request for the Metrics collector. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 256Mi
  -
    name: METRICS_SERVER_REQUESTS_CPU
    displayName: 'Default CPU request for the Metrics collector'
    description: 'The default CPU request for the Metrics collector. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 500m
  -
    name: METRICS_SERVER_LIMITS_MEMORY
    displayName: 'Default memory limit for the Metrics collector'
    description: 'The default memory limit for the Metrics collector. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 1024Mi
  -
    name: METRICS_SERVER_LIMITS_CPU
    displayName: 'Default CPU limit for the Metrics collector'
    description: 'The default CPU limit for the Metrics collector. See https://docs.openshift.org/latest/dev_guide/compute_resources.html#dev-compute-resources'
    value: 2000m
